# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: PythonTest


on: [push, pull_request, workflow_dispatch]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    env:
      SIRIUS_USER: ${{ secrets.SIRIUS_USER }}
      SIRIUS_PW: ${{ secrets.SIRIUS_PW }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install git+https://github.com/LukasScholz/sirius-client-openAPI#subdirectory=client-api_python/generated
        pip install -e ./client-api_python/generated
        echo "Finished Installing"
    - name: Cache Sirius Release
      id: cache-sirius
      uses: actions/cache@v3
      with:
        path: .updater/api/sirius
        key: sirius
    - name: Check cached version
      uses: nick-fields/retry@v2
      with:
        max_attempts: 5
        timeout_minutes: 2
        command: |
            currVersion=$(cat .updater/api/sirius.version)
            newVersion=$(curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | egrep -o "([0-9]{1,}\.)+[0-9]{1,}" | head -1)
            cd .updater/api
            if [ "$currVersion" != "$newVersion" ]; then
            sleep 1
            curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
            unzip *.zip; fi
    - name: Download latest Sirius Release
      if: steps.cache-sirius.outputs.cache-hit != 'true'
      uses: nick-fields/retry@v2
      with:
        max_attempts: 5
        timeout_minutes: 2
        command: |
            cd .updater/api/temp
            curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
            echo "Download Complete"
            unzip *.zip
            echo "Api Ready"
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 ./client-api_python --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 ./client-api_python --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        mkdir .updater/api/temp
        pytest .updater/clientTests/testPython.py
