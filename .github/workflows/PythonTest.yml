# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: PythonTest

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        #python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install git+https://github.com/LukasScholz/sirius-client-openAPI#subdirectory=client-api_python/generated
        pip install -e ./client-api_python/generated
        echo "Finished Installing"
    - name: Download latest Sirius Release
      run: |
        cd .updater/api
        curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
        if [ $? -ne 0 ]; then !!; fi
        if [ $? -ne 0 ]; then !!; fi
        if [ $? -ne 0 ]; then !!; fi
        if [ $? -ne 0 ]; then !!; fi
        if [ $? -ne 0 ]; then echo Download Failed 5x; exit 1; fi
        echo "Download Complete"
        unzip *.zip
        mkdir temp
        echo "Api Ready"
    - name: Run Rest Api
      run: |
        bash .updater/api/sirius/bin/sirius REST -p 8080 &
        while ! nc -z localhost 8080; do sleep 0.1; done
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 ./client-api_python --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 ./client-api_python --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python .updater/clientTests/testPython.py ${{ secrets.SIRIUS_USER }} ${{ secrets.SIRIUS_PW }}
