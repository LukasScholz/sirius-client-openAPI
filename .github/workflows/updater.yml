# This is a basic workflow that is manually triggered

name: Client_Updater

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
#    inputs:
 #     name:
  #      # Friendly description to be shown in the UI instead of 'name'
   #     description: 'Person to greet'
    #    # Default value if no value is explicitly provided
     ##   default: 'World'
       # # Input has to be provided for the workflow to run
        #required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  UpdateClients:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs using the runners shell
    - name: checkout repo
      uses: actions/checkout@v3.1.0
    - name: Download latest swagger build
      run: |
        git rev-parse HEAD > .github/CommitID
        cd .updater/swagger
        wget https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/3.0.35/swagger-codegen-cli-3.0.35.jar -O swagger-codegen-cli.jar
        java -jar swagger-codegen-cli.jar version > version
    - name: Download latest Sirius Release
      run: |
        cd .updater/api
        curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
        echo "Download Complete"
        unzip *.zip
        echo "Api Ready"
    - name: Run Rest Api
      run: |
        bash .updater/api/sirius/bin/sirius REST -p 8080 &
    - name: Update api-docs.json
      run: |
        while ! nc -z localhost 8080; do sleep 0.1; done
        cd .updater/api
        wget http://localhost:8080/v3/api-docs
        mv api-docs api-docs.json
    - name: Update Clients
      run: |
        echo "generating Java Code"
        java -jar .updater/swagger/swagger-codegen-cli.jar generate -i .updater/api/api-docs.json -c .updater/config/Java/config.json -l java -o client-api_java/generated
        
        echo "generating Python Code"
        java -jar .updater/swagger/swagger-codegen-cli.jar generate -i .updater/api/api-docs.json -c .updater/config/Python/config.json -l python -o client-api_python/generated
        
        echo "generating R Code"
        java -jar .updater/swagger/swagger-codegen-cli.jar generate -i .updater/api/api-docs.json -c .updater/config/R/config.json -l r -o client-api_r/generated
        
        echo "generating Ruby Code"
        java -jar .updater/swagger/swagger-codegen-cli.jar generate -i .updater/api/api-docs.json -c .updater/config/Ruby/config.json -l ruby -o client-api_ruby/generated
        echo "generating Finished!"
    - name: Format Python Package
      run: |
        echo removed
        #cp client-api_python/sirius_api.py client-api_python/generated/PySirius/models
        #echo "from PySirius.models.sirius_api import SiriusAPI" >> client-api_python/generated/PySirius/__init__.py
        #echo "from PySirius.models.sirius_api import SiriusAPI" >> client-api_python/generated/PySirius/models/__init__.py
        
    - name: Remove Sirius Rest Api
      run: |
        cd .updater/api
        rm -rf *sirius*
        echo "Done"
    - name: Remove Swagger-Codegen Files
      run: |
        rm .updater/swagger/swagger-codegen-cli.jar
        echo "Done"
    - name: update file and push to remote
      uses: stefanzweifel/git-auto-commit-action@v4.15.2
      with:
        commit_message: Auto-Updated Swagger Clients
        
  RunPythonTest:
    # Add dependency for Test
    needs: UpdateClients
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs using the runners shell
    - name: checkout repo
      uses: actions/checkout@v3.1.0
    - name: Download latest Sirius Release
      run: |
        cd .updater/api
        curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
        echo "Download Complete"
        unzip *.zip
        echo "Api Ready"
    - name: Run Rest Api
      run: |
        bash .updater/api/sirius/bin/sirius REST -p 8080 &
        while ! nc -z localhost 8080; do sleep 0.1; done
    - name: execute Python script # run the run.py to get the latest data
      run: |
        pip install git+https://github.com/LukasScholz/sirius-client-openAPI#subdirectory=client-api_python/generated
        pip install -e ./client-api_python/generated
        echo "Finished Installing"
        python .updater/clientTests/testPython.py
        
  RunJavaTest:
    # Add dependency for Test
    needs: UpdateClients
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs using the runners shell
    - name: checkout repo
      uses: actions/checkout@v3.1.0
    - name: Download latest Sirius Release
      run: |
        cd .updater/api
        curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
        echo "Download Complete"
        unzip *.zip
        echo "Api Ready"
    - name: Run Rest Api
      run: |
        bash .updater/api/sirius/bin/sirius REST -p 8080 &
        while ! nc -z localhost 8080; do sleep 0.1; done
    - name: execute Java script
      run: |
        echo "TODO" 

  RunRTest:
    # Add dependency for Test
    needs: UpdateClients
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs using the runners shell
    - name: checkout repo
      uses: actions/checkout@v3.1.0
    - name: Download latest Sirius Release
      run: |
        cd .updater/api
        curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
        echo "Download Complete"
        unzip *.zip
        echo "Api Ready"
    - name: Run Rest Api
      run: |
        bash .updater/api/sirius/bin/sirius REST -p 8080 &
        while ! nc -z localhost 8080; do sleep 0.1; done
    - name: execute R script
      run: |
        echo "TODO" 

  RunRubyTest:
    # Add dependency for Test
    needs: UpdateClients
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs using the runners shell
    - name: checkout repo
      uses: actions/checkout@v3.1.0
    - name: Download latest Sirius Release
      run: |
        cd .updater/api
        curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
        echo "Download Complete"
        unzip *.zip
        echo "Api Ready"
    - name: Run Rest Api
      run: |
        bash .updater/api/sirius/bin/sirius REST -p 8080 &
        while ! nc -z localhost 8080; do sleep 0.1; done
    - name: execute Ruby script
      run: |
        echo "TODO" 

  Cleanup:
    needs: [RunRubyTest, RunRTest, RunJavaTest, RunPythonTest]
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Undo Push
        run: |
          git reset --hard HEAD@{1}
          git push -f
