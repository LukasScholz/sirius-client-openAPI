/* 
 * SIRIUS Nightsky API
 *
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.
 *
 * OpenAPI spec version: v0.9 on SIRIUS 5.6.0-SNAPSHOT
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing GraphicalUserInterfaceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class GraphicalUserInterfaceApiTests
    {
        private GraphicalUserInterfaceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new GraphicalUserInterfaceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GraphicalUserInterfaceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' GraphicalUserInterfaceApi
            //Assert.IsInstanceOfType(typeof(GraphicalUserInterfaceApi), instance, "instance is a GraphicalUserInterfaceApi");
        }

        /// <summary>
        /// Test ApplyToGui
        /// </summary>
        [Test]
        public void ApplyToGuiTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GuiParameters body = null;
            //string projectId = null;
            //instance.ApplyToGui(body, projectId);
            
        }
        /// <summary>
        /// Test CloseGui
        /// </summary>
        [Test]
        public void CloseGuiTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //instance.CloseGui(projectId);
            
        }
        /// <summary>
        /// Test OpenGui
        /// </summary>
        [Test]
        public void OpenGuiTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //bool? _readOnly = null;
            //instance.OpenGui(projectId, _readOnly);
            
        }
    }

}
