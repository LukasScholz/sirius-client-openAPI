/* 
 * Sirius Nightsky Middleware API
 *
 * Sirius Nightsky Middleware API
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ProjectSpaceControllerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProjectSpaceControllerApiTests
    {
        private ProjectSpaceControllerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProjectSpaceControllerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProjectSpaceControllerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProjectSpaceControllerApi
            //Assert.IsInstanceOfType(typeof(ProjectSpaceControllerApi), instance, "instance is a ProjectSpaceControllerApi");
        }

        /// <summary>
        /// Test GetProjectSpaceUsingGET
        /// </summary>
        [Test]
        public void GetProjectSpaceUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.GetProjectSpaceUsingGET(name);
            //Assert.IsInstanceOf<ProjectSpaceId> (response, "response is ProjectSpaceId");
        }
        /// <summary>
        /// Test GetProjectSpacesUsingGET
        /// </summary>
        [Test]
        public void GetProjectSpacesUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetProjectSpacesUsingGET();
            //Assert.IsInstanceOf<List<ProjectSpaceId>> (response, "response is List<ProjectSpaceId>");
        }
        /// <summary>
        /// Test OpenProjectSpaceUsingPOST
        /// </summary>
        [Test]
        public void OpenProjectSpaceUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //var response = instance.OpenProjectSpaceUsingPOST(path);
            //Assert.IsInstanceOf<ProjectSpaceId> (response, "response is ProjectSpaceId");
        }
        /// <summary>
        /// Test OpenProjectSpaceUsingPUT
        /// </summary>
        [Test]
        public void OpenProjectSpaceUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string path = null;
            //var response = instance.OpenProjectSpaceUsingPUT(name, path);
            //Assert.IsInstanceOf<ProjectSpaceId> (response, "response is ProjectSpaceId");
        }
    }

}
