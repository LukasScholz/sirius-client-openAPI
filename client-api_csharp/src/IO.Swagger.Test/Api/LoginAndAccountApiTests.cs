/* 
 * SIRIUS Nightsky API
 *
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.
 *
 * OpenAPI spec version: v0.9 on SIRIUS 5.6.0-SNAPSHOT
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing LoginAndAccountApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LoginAndAccountApiTests
    {
        private LoginAndAccountApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LoginAndAccountApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LoginAndAccountApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LoginAndAccountApi
            //Assert.IsInstanceOfType(typeof(LoginAndAccountApi), instance, "instance is a LoginAndAccountApi");
        }

        /// <summary>
        /// Test GetAccountInfo
        /// </summary>
        [Test]
        public void GetAccountInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? includeSubs = null;
            //var response = instance.GetAccountInfo(includeSubs);
            //Assert.IsInstanceOf<AccountInfo> (response, "response is AccountInfo");
        }
        /// <summary>
        /// Test GetSignUpURL
        /// </summary>
        [Test]
        public void GetSignUpURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetSignUpURL();
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test GetSubscriptions
        /// </summary>
        [Test]
        public void GetSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetSubscriptions();
            //Assert.IsInstanceOf<List<Subscription>> (response, "response is List<Subscription>");
        }
        /// <summary>
        /// Test IsLoggedIn
        /// </summary>
        [Test]
        public void IsLoggedInTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.IsLoggedIn();
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        /// <summary>
        /// Test Login
        /// </summary>
        [Test]
        public void LoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AccountCredentials body = null;
            //bool? acceptTerms = null;
            //bool? failWhenLoggedIn = null;
            //bool? includeSubs = null;
            //var response = instance.Login(body, acceptTerms, failWhenLoggedIn, includeSubs);
            //Assert.IsInstanceOf<AccountInfo> (response, "response is AccountInfo");
        }
        /// <summary>
        /// Test Logout
        /// </summary>
        [Test]
        public void LogoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.Logout();
            
        }
        /// <summary>
        /// Test SignUp
        /// </summary>
        [Test]
        public void SignUpTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SignUp();
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
    }

}
